"use strict";(self.webpackChunkdbms_2025=self.webpackChunkdbms_2025||[]).push([[904],{2815:(a,n,e)=>{e.d(n,{A:()=>i});const i=e.p+"assets/images/1-5f79ef950920da5c0a11bc61a8c42248.png"},8070:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"pertemuan-4","title":"Performing Basic Queries","description":"Topik: Performing Basic Queries","source":"@site/docs/pertemuan-4.md","sourceDirName":".","slug":"/pertemuan-4","permalink":"/DBMS-2025/docs/pertemuan-4","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"pertemuan-4","title":"Performing Basic Queries","sidebar_label":"Pertemuan 4","sidebar_position":5,"slug":"/pertemuan-4"},"sidebar":"tutorialSidebar","previous":{"title":"Pertemuan 3","permalink":"/DBMS-2025/docs/pertemuan-3"},"next":{"title":"Pertemuan 5","permalink":"/DBMS-2025/docs/pertemuan-5"}}');var r=e(4848),s=e(8453);const l={id:"pertemuan-4",title:"Performing Basic Queries",sidebar_label:"Pertemuan 4",sidebar_position:5,slug:"/pertemuan-4"},t=void 0,d={},u=[{value:"Tujuan Pembelajaran",id:"tujuan-pembelajaran",level:2},{value:"Agenda",id:"agenda",level:2},{value:"Evaluasi Hasil Latihan Lab 1",id:"evaluasi-hasil-latihan-lab-1",level:2},{value:"Hal Yang Perlu Diperhatikan",id:"hal-yang-perlu-diperhatikan",level:3},{value:"Basic Queries",id:"basic-queries",level:2},{value:"SELECT",id:"select",level:3},{value:"SELECT DISTINCT",id:"select-distinct",level:3},{value:"NULL",id:"null",level:3},{value:"WHERE",id:"where",level:3},{value:"AND",id:"and",level:3},{value:"OR",id:"or",level:3},{value:"IN",id:"in",level:3},{value:"BETWEEN",id:"between",level:3},{value:"LIKE",id:"like",level:3},{value:"COLUMN &amp; TABEL ALIAS",id:"column--tabel-alias",level:3},{value:"ORDER BY",id:"order-by",level:3},{value:"TOP (khusus SQL Server)",id:"top-khusus-sql-server",level:3},{value:"OFFSET dan FETCH",id:"offset-dan-fetch",level:3},{value:"String Functions",id:"string-functions",level:2},{value:"AggregateFunctions",id:"aggregatefunctions",level:2},{value:"Date Function",id:"date-function",level:2},{value:"Kontributor",id:"kontributor",level:2},{value:"Credits",id:"credits",level:2}];function m(a){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Topik:"})," ",(0,r.jsx)(n.em,{children:"Performing Basic Queries"}),"\n",(0,r.jsx)(n.strong,{children:"Platform:"})," Microsoft SQL Server (\u22652019) & SSMS\n",(0,r.jsx)(n.strong,{children:"DBMS"})," \u2014 diselenggarakan oleh Fakultas Teknologi Informasi dan Sains Data Universitas Sebelas Maret, Semester Ganjil\n2025/2026"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tujuan-pembelajaran",children:"Tujuan Pembelajaran"}),"\n",(0,r.jsx)(n.p,{children:"Mahasiswa mempelajari cara melakukan query sederhana (untuk mendapatkan informasi) dari satu tabel dengan menggunakan\nberbagai klausa dan fungsi dasar SQL. Dalam prosesnya, mahasiswa tidak hanya memahami cara menampilkan data, tetapi juga\nmempelajari bagaimana memfilter, mengurutkan, membatasi, dan memodifikasi hasil query agar sesuai dengan kebutuhan\nanalisis data."}),"\n",(0,r.jsx)(n.h2,{id:"agenda",children:"Agenda"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Evaluasi Hasil Latihan Lab 1"}),"\n",(0,r.jsx)(n.li,{children:"Basic Queries"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"evaluasi-hasil-latihan-lab-1",children:"Evaluasi Hasil Latihan Lab 1"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Untuk tabel continents, cities, religions, organizations pada ",(0,r.jsx)(n.code,{children:"primary key"})," tambahkan ",(0,r.jsx)(n.code,{children:"IDENTITY (1,1)"})," yang artinya\nnanti agar sql server otomatis mengisi primary key nya dengan awalan angka 1 dan kelipatan 1 untuk angka berikutnya."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Temen" bisa mengunduh file SQL untuk latihan lab 1 dari link berikut:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://raw.githubusercontent.com/DBMS-FATISDA-UNS/DBMS-2025/refs/heads/main/static/lab/lab1/Mondial_Ujian_schema.sql",children:"\ud83d\udcc4 Mondial_Ujian_schema.sql"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://raw.githubusercontent.com/DBMS-FATISDA-UNS/DBMS-2025/refs/heads/main/static/lab/lab1/Mondial_Ujian_data.sql",children:"\ud83d\udcc4 Mondial_Ujian_data.sql"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hal-yang-perlu-diperhatikan",children:"Hal Yang Perlu Diperhatikan"}),"\n",(0,r.jsxs)(n.p,{children:["Ketika akan melakukan DDL (membuat tabel di database), pastikan terlebih dahulu membuat databasenya.\nDi SQL Server, terdapat 4 buah database sistem yang mempunyai tugas\nmasing-masing. Lebih jelas bisa dibaca di link ",(0,r.jsx)(n.a,{href:"https://www.careerride.com/SQL-Server-Master-MSDB-TEMPDB-Model.aspx",children:"berikut"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Oleh karena itu, jangan menjalankan query DDL ke dalam database master."})}),"\n",(0,r.jsx)(n.p,{children:"Untuk mengecek database yang sedang kita gunakan bisa dilihat di sebelah kiri\ntombol execute."}),"\n",(0,r.jsx)(n.p,{children:"Atau untuk berpindah antar database menggunakan query bisa menggunakan syntax\nberikut"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"USE <NAMA_DATABASE>;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Untuk memunculkan line number pada query bisa ikuti langkah ",(0,r.jsx)(n.a,{href:"https://www.c-sharpcorner.com/article/how-to-enable-line-numbers-in-sql-server-management-studio-ssms/",children:"berikut"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Ketika membuat file DDL, pastikan didalamnya terdapat migration up dan migration down."}),"\n",(0,r.jsx)(n.p,{children:'Migration Up: adalah proses menerapkan perubahan skema ke basis data yang lebih baru. Ketika Anda melakukan migrasi "up", Anda menerapkan perubahan ke database untuk menyesuaikannya dengan definisi skema yang baru.'}),"\n",(0,r.jsx)(n.p,{children:'Migration Down: adalah proses membatalkan perubahan skema yang telah diterapkan sebelumnya. Ini digunakan untuk mengembalikan basis data ke versi sebelumnya dengan membatalkan perubahan yang telah diterapkan melalui migrasi "up".'}),"\n",(0,r.jsx)(n.p,{children:"Urutan ketika menyusun migration up:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Dari tabel yang tidak mereferensi tabel lain dahulu."})}),"\n",(0,r.jsx)(n.p,{children:"Urutan ketika menyusun migration down:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Dari tabel tidak diferensi tabel lain dahulu."})}),"\n",(0,r.jsx)(n.h2,{id:"basic-queries",children:"Basic Queries"}),"\n",(0,r.jsxs)(n.p,{children:["Pada materi kali ini menggunakan schema ",(0,r.jsx)(n.a,{href:"https://www.dbis.informatik.uni-goettingen.de/Mondial/",children:"mondial"})]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:'Download file schema dan data pada classroom kelas masing"'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"mondial",src:e(2815).A+"",width:"2648",height:"1568"})}),"\n",(0,r.jsx)(n.h3,{id:"select",children:"SELECT"}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan \u2018SELECT\u2019 digunakan untuk memilih atribut yang akan ditampilkan atau dimanipulasi dari tabel. Dengan \u2018SELECT\u2019,\nkita dapat memilih satu atau lebih atribut dari satu atau lebih tabel, serta dapat memberikan alias pada atribut yang\ndipilih. Pernyataan ini terdiri dari dua bagian utama, yaitu \u2018SELECT\u2019 dan \u2018FROM\u2019."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SELECT: Menentukan atribut atau kolom yang ingin ditampilkan."}),"\n",(0,r.jsx)(n.li,{children:"FROM: Menentukan tabel asal dari atribut atau kolom yang dipilih. FROM sangat penting karena mengidentifikasi sumber\ndata yang akan diambil."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax Select:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT\n\nnama_kolom1,\n\nnama_kolom2\n\nFROM\n\nnama_tabel;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh mengambil data pada semua kolom"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT\n\n*\n\nFROM\n\nnama_tabel;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"select-distinct",children:"SELECT DISTINCT"}),"\n",(0,r.jsx)(n.p,{children:"SELECT DISTINCT digunakan untuk mengambil satu-satunya nilai yang berbeda dalam daftar kolom tertentu."}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT DISTINCT nama_kolom1\n\nFROM nama_tabel;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"null",children:"NULL"}),"\n",(0,r.jsx)(n.p,{children:"NULL digunakan untuk menunjukkan tidak adanya nilai data apa pun."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT nama_kolom1, nama_kolom2\n\nFROM nama_tabel\n\nWHERE condition [IS NULL | IS NOT NULL]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"where",children:"WHERE"}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan \u2018WHERE\u2019 digunakan untuk memfilter baris data berdasarkan kondisi tertentu. Dengan \u2018WHERE\u2019, kita dapat\nmenentukan kriteria yang harus dipenuhi agar data ditampilkan."}),"\n",(0,r.jsx)(n.p,{children:"WHERE: Menentukan kondisi atau syarat yang harus dipenuhi oleh data yang diambil."}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT nama_kolom1, nama_kolom2\n\nFROM nama_tabel\n\nWHERE condition\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT first_name, last_name\nFROM actor\nWHERE first_name = 'Nick';\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas akan menampilkan data first_name dan last_name dari tabel actor yang memiliki first_name bernilai\n\u2018Nick\u2019.\nHasilnya adalah hanya baris yang memenuhi kondisi tersebut."}),"\n",(0,r.jsx)(n.h3,{id:"and",children:"AND"}),"\n",(0,r.jsx)(n.p,{children:"Operator \u2018AND\u2019 digunakan untuk menggabungkan dua atau lebih kondisi dalam klausa WHERE. Semua kondisi yang dihubungkan\ndengan AND harus benar agar baris data ditampilkan."}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT nama_kolom1, nama_kolom2\n\nFROM nama_tabel\n\nWHERE condition1 AND condition2\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM actor WHERE first_name = 'Nick' AND last_name = 'Wahlberg';\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas akan menampilkan data dari tabel actor yang memiliki first_name = 'Nick' dan last_name = 'Wahlberg'.\nHasilnya hanya satu atau beberapa baris yang memenuhi kedua kondisi sekaligus."}),"\n",(0,r.jsx)(n.h3,{id:"or",children:"OR"}),"\n",(0,r.jsx)(n.p,{children:"Operator \u2018OR\u2019 digunakan untuk menampilkan data yang memenuhi salah satu dari beberapa kondisi."}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT nama_kolom1, nama_kolom2\n\nFROM nama_tabel\n\nWHERE condition1 OR condition2\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh Syntax :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM actor WHERE first_name = 'Nick' OR first_name = 'Penelope';\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Perintah di atas akan menampilkan semua aktor yang memiliki first_name = 'Nick' atau first_name = 'Penelope'.\nJika salah satu kondisi terpenuhi, baris data akan ditampilkan."}),"\n",(0,r.jsx)(n.h3,{id:"in",children:"IN"}),"\n",(0,r.jsx)(n.p,{children:"Operator \u2018IN\u2019 digunakan untuk memeriksa apakah nilai suatu kolom termasuk dalam daftar nilai tertentu."}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM actor WHERE first_name IN ('Nick', 'Penelope', 'Ed');\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan tersebut akan menampilkan semua data dari tabel actor yang memiliki first_name bernilai Nick, Penelope, atau\nEd.\nHasilnya adalah baris yang sesuai dengan daftar nilai yang disebutkan."}),"\n",(0,r.jsx)(n.h3,{id:"between",children:"BETWEEN"}),"\n",(0,r.jsx)(n.p,{children:"Operator \u2018BETWEEN\u2019 digunakan untuk memfilter data berdasarkan rentang nilai (range), baik angka maupun tanggal."}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT nama_kolom1, nama_kolom2\n\nFROM nama_tabel\n\nWHERE expression BETWEEN start_expression AND end_expression\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM payment WHERE amount BETWEEN 5 AND 10;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas akan menampilkan semua data dari tabel payment dengan nilai amount di antara 5 dan 10 (termasuk 5 dan\n10). Hasilnya adalah baris dengan nilai amount \u2265 5 dan \u2264 10."}),"\n",(0,r.jsx)(n.h3,{id:"like",children:"LIKE"}),"\n",(0,r.jsx)(n.p,{children:"Operator \u2018LIKE\u2019 digunakan untuk pencarian pola (pattern matching) pada teks.\nSimbol yang digunakan:"}),"\n",(0,r.jsx)(n.p,{children:"Pola / Pattern ini dapat menyertakan karakter wildcard yang valid berikut ini:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Karakter pengganti persen \u2018%\u2019: string apa pun yang terdiri dari nol karakter atau lebih."}),"\n",(0,r.jsx)(n.li,{children:"Karakter pengganti garis bawah \u2018_\u2019: karakter tunggal apa pun."}),"\n",(0,r.jsx)(n.li,{children:"Karakter pengganti [daftar karakter]: karakter tunggal apa pun dalam set yang ditentukan."}),"\n",(0,r.jsx)(n.li,{children:"Karakter [karakter-karakter]: karakter tunggal apa pun dalam rentang yang ditentukan."}),"\n",(0,r.jsx)(n.li,{children:"Tanda [^]: karakter apa pun yang tidak berada dalam daftar atau rentang."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"column | expression LIKE pattern [ESCAPE escape_character]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM actor WHERE first_name LIKE 'A%';\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas akan menampilkan semua aktor yang first_name-nya diawali huruf A.\nMisalnya: Adam, Angela, Arthur, dll."}),"\n",(0,r.jsx)(n.h3,{id:"column--tabel-alias",children:"COLUMN & TABEL ALIAS"}),"\n",(0,r.jsx)(n.p,{children:"Alias digunakan untuk memberikan nama sementara pada kolom agar hasil query lebih mudah dibaca. Alias dapat ditulis\ndengan atau tanpa kata kunci AS."}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT first_name AS [Nama Depan], last_name AS[Nama Belakang] FROM actor;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas menampilkan kolom first_name dan last_name, tetapi dengan judul kolom yang diubah menjadi Nama Depan dan Nama Belakang. Alias tidak mengubah nama kolom di tabel asli, hanya pada tampilan hasil query."}),"\n",(0,r.jsx)(n.h3,{id:"order-by",children:"ORDER BY"}),"\n",(0,r.jsxs)(n.p,{children:["Pernyataan \u2018ORDER BY\u2019 digunakan untuk mengurutkan hasil query berdasarkan satu atau lebih kolom, baik secara ",(0,r.jsx)(n.code,{children:"ASC (naik)"})," atau ",(0,r.jsx)(n.code,{children:"DESC (turun)"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT\n\nnama_kolom\n\nFROM\n\nnama_tabel\n\nORDER BY\n\nnama_kolom [ASC | DESC];\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Secara default tanpa pakai ASC / DESC sql server bakal mengurutkan data secara ASC (Ascending)"})}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT first_name, last_name FROM actor ORDER BY first_name ASC;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Perintah di atas akan menampilkan daftar aktor yang diurutkan berdasarkan first_name dari A ke Z.\nJika ingin urutan terbalik, gunakan DESC."}),"\n",(0,r.jsx)(n.h3,{id:"top-khusus-sql-server",children:"TOP (khusus SQL Server)"}),"\n",(0,r.jsx)(n.p,{children:"Klausa \u2018TOP\u2019 digunakan untuk membatasi jumlah baris yang ditampilkan dari hasil query."}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT TOP 5 * FROM actor;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Perintah ini akan menampilkan 5 baris pertama dari tabel actor.\nBiasanya digunakan untuk melihat sebagian kecil data atau hasil dengan performa lebih cepat."}),"\n",(0,r.jsx)(n.h3,{id:"offset-dan-fetch",children:"OFFSET dan FETCH"}),"\n",(0,r.jsx)(n.p,{children:"Klausa \u2018OFFSET\u2019 dan \u2018FETCH\u2019 digunakan untuk menampilkan data secara bertahap (pagination)."}),"\n",(0,r.jsx)(n.p,{children:"OFFSET menentukan berapa banyak baris yang akan dilewati."}),"\n",(0,r.jsx)(n.p,{children:"FETCH menentukan berapa banyak baris yang akan diambil setelahnya."}),"\n",(0,r.jsx)(n.p,{children:"Contoh syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM actor\nORDER BY actor_id\nOFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY;\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Jika ingin menggunakan ",(0,r.jsx)(n.code,{children:"FETCH"}),", harus menuliskan ",(0,r.jsx)(n.code,{children:"OFFSET"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"Pernyataan di atas akan melewati 10 baris pertama dan menampilkan 5 baris berikutnya dari tabel actor.\nCocok digunakan untuk fitur paging di aplikasi (misalnya halaman data ke-2, ke-3, dst)."}),"\n",(0,r.jsx)(n.h2,{id:"string-functions",children:"String Functions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.sqlservertutorial.net/sql-server-string-functions/",children:"Link Materi"})}),"\n",(0,r.jsx)(n.h2,{id:"aggregatefunctions",children:"AggregateFunctions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.sqlservertutorial.net/sql-server-aggregate-functions/",children:"Link Materi"})}),"\n",(0,r.jsx)(n.h2,{id:"date-function",children:"Date Function"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.sqlservertutorial.net/sql-server-date-functions/",children:"Link Materi"})}),"\n",(0,r.jsx)(n.h2,{id:"kontributor",children:"Kontributor"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Addin Hadi Rizal"}),"\n",(0,r.jsx)(n.li,{children:"Clementine Dwayani Danitasari"}),"\n",(0,r.jsx)(n.li,{children:"Mohammed Nasser"}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.h2,{id:"credits",children:"Credits"}),(0,r.jsx)(n.p,{children:"Tutorial ini dikembangkan oleh Asisten Praktikum DBMS 2025. Segala tutorial serta instruksi yang dicantumkan pada repositori ini dirancang sedemikian rupa sehingga mahasiswa yang sedang mengambil mata kuliah Basis Data dapat menyelesaikan tutorial saat sesi lab berlangsung."})]})]})}function c(a={}){const{wrapper:n}={...(0,s.R)(),...a.components};return n?(0,r.jsx)(n,{...a,children:(0,r.jsx)(m,{...a})}):m(a)}},8453:(a,n,e)=>{e.d(n,{R:()=>l,x:()=>t});var i=e(6540);const r={},s=i.createContext(r);function l(a){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof a?a(n):{...n,...a}},[n,a])}function t(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:l(a.components),i.createElement(s.Provider,{value:n},a.children)}}}]);